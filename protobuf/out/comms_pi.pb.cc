// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: comms_pi.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "comms_pi.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace comms_pi {

namespace {

const ::google::protobuf::Descriptor* Data_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Data_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_comms_5fpi_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_comms_5fpi_2eproto() {
  protobuf_AddDesc_comms_5fpi_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "comms_pi.proto");
  GOOGLE_CHECK(file != NULL);
  Data_descriptor_ = file->message_type(0);
  static const int Data_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Data, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Data, msp_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Data, commstemp_),
  };
  Data_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Data_descriptor_,
      Data::internal_default_instance(),
      Data_offsets_,
      -1,
      -1,
      -1,
      sizeof(Data),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Data, _internal_metadata_));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_comms_5fpi_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Data_descriptor_, Data::internal_default_instance());
}

}  // namespace

void protobuf_ShutdownFile_comms_5fpi_2eproto() {
  Data_default_instance_.Shutdown();
  delete Data_reflection_;
}

void protobuf_InitDefaults_comms_5fpi_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::common::protobuf_InitDefaults_common_2eproto();
  ::daqcs_msp::protobuf_InitDefaults_daqcs_5fmsp_2eproto();
  Data_default_instance_.DefaultConstruct();
  Data_default_instance_.get_mutable()->InitAsDefaultInstance();
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_InitDefaults_comms_5fpi_2eproto_once_);
void protobuf_InitDefaults_comms_5fpi_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_InitDefaults_comms_5fpi_2eproto_once_,
                 &protobuf_InitDefaults_comms_5fpi_2eproto_impl);
}
void protobuf_AddDesc_comms_5fpi_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  protobuf_InitDefaults_comms_5fpi_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\016comms_pi.proto\022\010comms_pi\032\014common.proto"
    "\032\017daqcs_msp.proto\"W\n\004Data\022\n\n\002id\030\001 \001(\005\022\034\n"
    "\003msp\030\002 \001(\0132\017.daqcs_msp.Data\022%\n\tcommsTemp"
    "\030\003 \001(\0132\022.common.TempSensorb\006proto3", 154);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "comms_pi.proto", &protobuf_RegisterTypes);
  ::common::protobuf_AddDesc_common_2eproto();
  ::daqcs_msp::protobuf_AddDesc_daqcs_5fmsp_2eproto();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_comms_5fpi_2eproto);
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AddDesc_comms_5fpi_2eproto_once_);
void protobuf_AddDesc_comms_5fpi_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AddDesc_comms_5fpi_2eproto_once_,
                 &protobuf_AddDesc_comms_5fpi_2eproto_impl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_comms_5fpi_2eproto {
  StaticDescriptorInitializer_comms_5fpi_2eproto() {
    protobuf_AddDesc_comms_5fpi_2eproto();
  }
} static_descriptor_initializer_comms_5fpi_2eproto_;

namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD GOOGLE_ATTRIBUTE_NORETURN;
static void MergeFromFail(int line) {
  ::google::protobuf::internal::MergeFromFail(__FILE__, line);
}

}  // namespace


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Data::kIdFieldNumber;
const int Data::kMspFieldNumber;
const int Data::kCommsTempFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Data::Data()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_comms_5fpi_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:comms_pi.Data)
}

void Data::InitAsDefaultInstance() {
  msp_ = const_cast< ::daqcs_msp::Data*>(
      ::daqcs_msp::Data::internal_default_instance());
  commstemp_ = const_cast< ::common::TempSensor*>(
      ::common::TempSensor::internal_default_instance());
}

Data::Data(const Data& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:comms_pi.Data)
}

void Data::SharedCtor() {
  msp_ = NULL;
  commstemp_ = NULL;
  id_ = 0;
  _cached_size_ = 0;
}

Data::~Data() {
  // @@protoc_insertion_point(destructor:comms_pi.Data)
  SharedDtor();
}

void Data::SharedDtor() {
  if (this != &Data_default_instance_.get()) {
    delete msp_;
    delete commstemp_;
  }
}

void Data::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Data::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Data_descriptor_;
}

const Data& Data::default_instance() {
  protobuf_InitDefaults_comms_5fpi_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<Data> Data_default_instance_;

Data* Data::New(::google::protobuf::Arena* arena) const {
  Data* n = new Data;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Data::Clear() {
// @@protoc_insertion_point(message_clear_start:comms_pi.Data)
  id_ = 0;
  if (GetArenaNoVirtual() == NULL && msp_ != NULL) delete msp_;
  msp_ = NULL;
  if (GetArenaNoVirtual() == NULL && commstemp_ != NULL) delete commstemp_;
  commstemp_ = NULL;
}

bool Data::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:comms_pi.Data)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 id = 1;
      case 1: {
        if (tag == 8) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_msp;
        break;
      }

      // optional .daqcs_msp.Data msp = 2;
      case 2: {
        if (tag == 18) {
         parse_msp:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_msp()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_commsTemp;
        break;
      }

      // optional .common.TempSensor commsTemp = 3;
      case 3: {
        if (tag == 26) {
         parse_commsTemp:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_commstemp()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:comms_pi.Data)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:comms_pi.Data)
  return false;
#undef DO_
}

void Data::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:comms_pi.Data)
  // optional int32 id = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }

  // optional .daqcs_msp.Data msp = 2;
  if (this->has_msp()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->msp_, output);
  }

  // optional .common.TempSensor commsTemp = 3;
  if (this->has_commstemp()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->commstemp_, output);
  }

  // @@protoc_insertion_point(serialize_end:comms_pi.Data)
}

::google::protobuf::uint8* Data::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:comms_pi.Data)
  // optional int32 id = 1;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }

  // optional .daqcs_msp.Data msp = 2;
  if (this->has_msp()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->msp_, false, target);
  }

  // optional .common.TempSensor commsTemp = 3;
  if (this->has_commstemp()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->commstemp_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:comms_pi.Data)
  return target;
}

size_t Data::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:comms_pi.Data)
  size_t total_size = 0;

  // optional int32 id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->id());
  }

  // optional .daqcs_msp.Data msp = 2;
  if (this->has_msp()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->msp_);
  }

  // optional .common.TempSensor commsTemp = 3;
  if (this->has_commstemp()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->commstemp_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Data::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:comms_pi.Data)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const Data* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Data>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:comms_pi.Data)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:comms_pi.Data)
    UnsafeMergeFrom(*source);
  }
}

void Data::MergeFrom(const Data& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:comms_pi.Data)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void Data::UnsafeMergeFrom(const Data& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.id() != 0) {
    set_id(from.id());
  }
  if (from.has_msp()) {
    mutable_msp()->::daqcs_msp::Data::MergeFrom(from.msp());
  }
  if (from.has_commstemp()) {
    mutable_commstemp()->::common::TempSensor::MergeFrom(from.commstemp());
  }
}

void Data::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:comms_pi.Data)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Data::CopyFrom(const Data& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:comms_pi.Data)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool Data::IsInitialized() const {

  return true;
}

void Data::Swap(Data* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Data::InternalSwap(Data* other) {
  std::swap(id_, other->id_);
  std::swap(msp_, other->msp_);
  std::swap(commstemp_, other->commstemp_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Data::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Data_descriptor_;
  metadata.reflection = Data_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Data

// optional int32 id = 1;
void Data::clear_id() {
  id_ = 0;
}
::google::protobuf::int32 Data::id() const {
  // @@protoc_insertion_point(field_get:comms_pi.Data.id)
  return id_;
}
void Data::set_id(::google::protobuf::int32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:comms_pi.Data.id)
}

// optional .daqcs_msp.Data msp = 2;
bool Data::has_msp() const {
  return this != internal_default_instance() && msp_ != NULL;
}
void Data::clear_msp() {
  if (GetArenaNoVirtual() == NULL && msp_ != NULL) delete msp_;
  msp_ = NULL;
}
const ::daqcs_msp::Data& Data::msp() const {
  // @@protoc_insertion_point(field_get:comms_pi.Data.msp)
  return msp_ != NULL ? *msp_
                         : *::daqcs_msp::Data::internal_default_instance();
}
::daqcs_msp::Data* Data::mutable_msp() {
  
  if (msp_ == NULL) {
    msp_ = new ::daqcs_msp::Data;
  }
  // @@protoc_insertion_point(field_mutable:comms_pi.Data.msp)
  return msp_;
}
::daqcs_msp::Data* Data::release_msp() {
  // @@protoc_insertion_point(field_release:comms_pi.Data.msp)
  
  ::daqcs_msp::Data* temp = msp_;
  msp_ = NULL;
  return temp;
}
void Data::set_allocated_msp(::daqcs_msp::Data* msp) {
  delete msp_;
  msp_ = msp;
  if (msp) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:comms_pi.Data.msp)
}

// optional .common.TempSensor commsTemp = 3;
bool Data::has_commstemp() const {
  return this != internal_default_instance() && commstemp_ != NULL;
}
void Data::clear_commstemp() {
  if (GetArenaNoVirtual() == NULL && commstemp_ != NULL) delete commstemp_;
  commstemp_ = NULL;
}
const ::common::TempSensor& Data::commstemp() const {
  // @@protoc_insertion_point(field_get:comms_pi.Data.commsTemp)
  return commstemp_ != NULL ? *commstemp_
                         : *::common::TempSensor::internal_default_instance();
}
::common::TempSensor* Data::mutable_commstemp() {
  
  if (commstemp_ == NULL) {
    commstemp_ = new ::common::TempSensor;
  }
  // @@protoc_insertion_point(field_mutable:comms_pi.Data.commsTemp)
  return commstemp_;
}
::common::TempSensor* Data::release_commstemp() {
  // @@protoc_insertion_point(field_release:comms_pi.Data.commsTemp)
  
  ::common::TempSensor* temp = commstemp_;
  commstemp_ = NULL;
  return temp;
}
void Data::set_allocated_commstemp(::common::TempSensor* commstemp) {
  delete commstemp_;
  commstemp_ = commstemp;
  if (commstemp) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:comms_pi.Data.commsTemp)
}

inline const Data* Data::internal_default_instance() {
  return &Data_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace comms_pi

// @@protoc_insertion_point(global_scope)
